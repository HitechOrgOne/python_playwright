name: Playwright Tests with Allure on EC2 (Python)

on:
  push:
    branches:
      - main
    paths-ignore:
      - '**/*.yml'
      - '**/*.yaml'

jobs:
  test:
    name: Run Playwright with Allure on EC2 (Python)
    runs-on: ubuntu-latest

    container:
      image: mcr.microsoft.com/playwright/python:v1.44.0-jammy
      options: --entrypoint ""

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Java (for Allure)
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Verify Python and Java installation
        run: |
          python --version
          pip --version
          java -version
          javac -version

      - name: Set environment URL
        run: echo "BASE_URL=${{ vars.STAGING_URL }}" >> $GITHUB_ENV

      - name: Install Python dependencies and run tests
        env:
          TEST_USERNAME: ${{ secrets.TEST_USERNAME }}
          TEST_PASSWORD: ${{ secrets.TEST_PASSWORD }}
        run: |
          pip install --upgrade pip
          pip install -r PythonProject/e2e/requirements.txt
          pip install pytest-playwright allure-pytest
          playwright install --with-deps
          pytest PythonProject/e2e/tests --alluredir=PythonProject/e2e/reports/allure-results -v
          ls -R PythonProject/e2e/reports || echo "No reports generated"

      - name: Install Allure Commandline
        run: |
          curl -o allure-2.27.0.tgz -L https://github.com/allure-framework/allure2/releases/download/2.27.0/allure-2.27.0.tgz
          tar -xvzf allure-2.27.0.tgz
          mv allure-2.27.0 /opt/allure
          ln -s /opt/allure/bin/allure /usr/local/bin/allure

      - name: Generate Allure report
        if: always()
        run: |
          allure generate PythonProject/e2e/reports/allure-results --clean -o PythonProject/e2e/reports/allure-report || echo "No allure results found"

      - name: Upload Allure report (HTML)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: PythonProject/e2e/reports/allure-report/

      - name: Remove AWS CLI v1 (optional)
        run: |
          apt-get remove -y awscli || true

      - name: Install AWS CLI v2 (standalone)
        if: always()
        run: |
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip awscliv2.zip
            sudo ./aws/install
            aws --version

      - name: Configure AWS credentials
        if: always()
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          aws configure set aws_access_key_id "$AWS_ACCESS_KEY_ID"
          aws configure set aws_secret_access_key "$AWS_SECRET_ACCESS_KEY"
          aws configure set region "$AWS_REGION"

      - name: Upload Allure report to S3 with timestamp
        if: always()
        env:
          S3_BUCKET_NAME: ${{ secrets.S3_BUCKET_NAME }}
        run: |
          TIMESTAMP=$(date +"%Y-%m-%d_%H-%M-%S")
          echo "Uploading to s3://$S3_BUCKET_NAME/allure-report/$TIMESTAMP/"
          aws s3 cp --recursive PythonProject/e2e/reports/allure-report/ "s3://$S3_BUCKET_NAME/allure-report/$TIMESTAMP/"

